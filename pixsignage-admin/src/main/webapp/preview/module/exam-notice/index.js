'use strict';var ExamNotice=function(c,d){this.zonediv=c,this.zone=d,common.exam.push(this),this.examList=function(){var a=this;$.ajax({url:common.baseUrl+'/classrooms/'+common.classRoom.id+'/examinationrooms',dataType:'json'}).then(function(b){if(0!=b.retcode)throw new Error('failed to get exam list.');var c=doT.template('<div class="exam-holder">\n             <div class="exam-list">\n                <div class="current-exam-item" data-id="{{=it[0].id}}">\n                    <p class="exam-name">{{=it[0].name}}</p>\n                    <p class="exam-name">{{=it[0].coursename}}</p>\n                    <p class="exam-time">{{=moment(it[0].starttime).format(\'MM-DD HH:mm\')}} - {{=moment(it[0].endtime).format(\'HH:mm\')}}</p>\n                </div>\n                <div class="future-exams">\n                    {{~it:exam:index}}\n                    {{? index > 0}}\n                    <div class="future-exam-item" data-id="{{=exam.id}}">\n                        <p class="exam-name">\u4E0B\u4E00\u573A {{=exam.coursename}}</p>\n                        <p class="exam-time">{{=moment(exam.starttime).format(\'MM-DD HH:mm\')}} - {{=moment(exam.endtime).format(\'HH:mm\')}}</p>\n                    </div>\n                    {{?}}\n                    {{~}}\n                </div>\n            </div>\n        </div>');a.zonediv.html(c(b.data))}).catch(function(a){console.log(a.message)})},this.init=function(){setInterval(this.examList,6e5),this.examList()},this.resize=function(e,f){c.css({"box-sizing":'border-box',"border-color":d.bdcolor,"border-style":d.bdstyle,"border-width":parseInt(d.bdwidth)/e+'px',"border-radius":parseInt(d.bdradius)/e+'px',overflow:'hidden'});var a=Math.max(e,f);$('.current-exam-item .exam-name').css({"font-size":140/a+'px'}),$('.current-exam-item .exam-time').css({"font-size":80/a+'px'}),$('.future-exam-item').css({"font-size":30/a+'px'})}};

//# sourceMappingURL=index.js.map