<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.broadvideo.pixsignage.persistence.MeetingMapper" >
  <resultMap id="BaseResultMap" type="com.broadvideo.pixsignage.domain.Meeting" >
    <id column="meetingid" property="meetingid" jdbcType="INTEGER" />
    <result column="uuid" property="uuid" jdbcType="VARCHAR" />
    <result column="meetingroomid" property="meetingroomid" jdbcType="INTEGER" />
    <result column="subject" property="subject" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="starttime" property="starttime" jdbcType="TIMESTAMP" />
    <result column="endtime" property="endtime" jdbcType="TIMESTAMP" />
    <result column="duration" property="duration" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="bookstaffid" property="bookstaffid" jdbcType="INTEGER" />
    <result column="bookbranchid" property="bookbranchid" jdbcType="INTEGER" />
    <result column="qrcode" property="qrcode" jdbcType="VARCHAR" />
    <result column="orgid" property="orgid" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="createstaffid" property="createstaffid" jdbcType="INTEGER" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="updatestaffid" property="updatestaffid" jdbcType="INTEGER" />
    <result column="auditstatus" property="auditstatus" jdbcType="CHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
  </resultMap>
  
  <resultMap id="ExtResultMap" extends="BaseResultMap"  type="com.broadvideo.pixsignage.domain.Meeting" >
    <result column="locationname" property="locationname" jdbcType="VARCHAR" />
    <result column="meetingroomname" property="meetingroomname" jdbcType="VARCHAR" />
    <result column="bookstaffname" property="bookstaffname" jdbcType="VARCHAR" />
    <result column="bookbranchname" property="bookbranchname" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="ExtResultMap2"  extends="BaseResultMap"  type="com.broadvideo.pixsignage.domain.Meeting" >
    <result column="locationname" property="locationname" jdbcType="VARCHAR" />
    <result column="meetingroomname" property="meetingroomname" jdbcType="VARCHAR" />
    <result column="bookstaffname" property="bookstaffname" jdbcType="VARCHAR" />
    <result column="bookbranchname" property="bookbranchname" jdbcType="VARCHAR" />
    <collection property="attendees" ofType="com.broadvideo.pixsignage.domain.Attendee"
      column="{meetingid=meetingid}" select="com.broadvideo.pixsignage.persistence.AttendeeMapper.selectMeetingAttendees" />
  </resultMap>
  <sql id="Base_Column_List" >
    meetingid, uuid, meetingroomid, subject, description, starttime, endtime, duration, 
    amount, bookstaffid, bookbranchid, qrcode, orgid, createtime, createstaffid, updatetime, 
    updatestaffid, auditstatus, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from meeting
    where meetingid = #{meetingid,jdbcType=INTEGER}
  </select>
    <select id="selectList" resultMap="ExtResultMap" >
  
	 SELECT
		  m.*,
		  st.name  as bookstaffname,
		  br.name as bookbranchname,
		  mr.name AS meetingroomname,
		  l.name  AS locationname
	FROM meeting m
	  LEFT JOIN meetingroom mr
	    ON (m.status = '1'
	        AND m.meetingroomid = mr.meetingroomid)
	  LEFT JOIN staff st
	    ON (m.bookstaffid = st.staffid)
	  LEFT JOIN branch br
	    ON (m.bookbranchid = br.branchid)
	   LEFT JOIN location l
	    ON (mr.locationid = l.locationid)
	  WHERE  mr.orgid = #{orgid} and mr.status='1'
      <if test="locationid != null">
	      AND EXISTS (
		          SELECT
	                 1
	               FROM location l1
	                 LEFT JOIN location l2
	                   ON (l1.locationid = l2.parentid
	                       AND l2.status = '1')
	                 LEFT JOIN location l3
	                   ON (l3.parentid = l2.locationid
	                       AND l3.status = '1')
	                 LEFT JOIN location l4
	                   ON (l4.parentid = l3.locationid
	                       AND l4.status = '1')
	               WHERE l1.status = '1'
	                   AND l1.locationid =#{locationid}
	                   AND (l1.locationid = mr.locationid
	                         OR l2.locationid = mr.locationid
	                         OR l3.locationid = mr.locationid
	                         OR l4.locationid = mr.locationid
	                         )
                   )  
	  </if> 
	  <if test="search!=null">
	     and (m.subject like #{search} )
	  </if>
	    order by m.starttime desc
  </select>
  
   <select id="selectList2" resultMap="ExtResultMap2" >
  
	 SELECT
		  m.*,
		  st.name  as bookstaffname,
		  br.name as bookbranchname,
		  mr.name AS meetingroomname,
		  l.name  AS locationname
	FROM meeting m
	  LEFT JOIN meetingroom mr
	    ON (m.status = '1'
	        AND m.meetingroomid = mr.meetingroomid)
	  LEFT JOIN staff st
	    ON (m.bookstaffid = st.staffid)
	  LEFT JOIN branch br
	    ON (m.bookbranchid = br.branchid)
	   LEFT JOIN location l
	    ON (mr.locationid = l.locationid)
	  WHERE  mr.orgid = #{orgid} and mr.status='1'
	  <if test="search!=null">
	     and (m.subject like #{search} )
	  </if>
	  <if test="meetingroomid!=null">
	   and m.meetingroomid=#{meetingroomid}
	  </if>
	  <if test="starttime!=null">
	   and m.starttime>=#{starttime}
	  </if>
	   <if test="endtime!=null">
	   and m.endtime <![CDATA[<=]]> #{endtime}
	  </if>
	  <if test="bookbranchid!=null">
	   and  m.bookbranchid IN (
	       select  tmp.branchid
	          from branch tmp 
	          where tmp.branchid=#{bookbranchid} or tmp.parentid=#{bookbranchid} 
	           or tmp.parentid2=#{bookbranchid} or tmp.parentid3=#{bookbranchid}           
	     )   
	  </if>
	   <if test="bookstaffid!=null">
	   and (m.bookstaffid=#{bookstaffid} 
	   <if  test="attendeeuserids!=null">
	       or exists( select 1 from  attendee att where att.meetingid=m.meetingid and att.staffid in  
	     <foreach close=")" collection="attendeeuserids" item="listItem" open="(" separator=",">
                    #{listItem}
          </foreach>
	   </if>
	   ) )
	  </if>
	  <if test="locationid != null">
	      AND EXISTS (
		          SELECT
	                 1
	               FROM location l1
	                 LEFT JOIN location l2
	                   ON (l1.locationid = l2.parentid
	                       AND l2.status = '1')
	                 LEFT JOIN location l3
	                   ON (l3.parentid = l2.locationid
	                       AND l3.status = '1')
	                 LEFT JOIN location l4
	                   ON (l4.parentid = l3.locationid
	                       AND l4.status = '1')
	               WHERE l1.status = '1'
	                   AND l1.locationid =#{locationid}
	                   AND (l1.locationid = mr.locationid
	                         OR l2.locationid = mr.locationid
	                         OR l3.locationid = mr.locationid
	                         OR l4.locationid = mr.locationid
	                         )
                   )  
	  </if> 
	  <if test="starttime!=null or endtime!=null">
	  	  order by m.starttime asc
	  </if>
	  <if test="starttime==null and endtime==null">
	      order by m.starttime desc
	  
	  </if>
  </select>
  
  <select  id="selectExistMeetings" resultMap="BaseResultMap"  >
  
	  select  
	      <include refid="Base_Column_List" />
	  from meeting
      where  status='1' and  orgid=#{orgid} and meetingroomid=#{meetingroomid} 
      <if test="meetingid!=null">
         and meetingid!=#{meetingid}
      </if>
       and starttime <![CDATA[<]]> #{endtime}  and  endtime > #{starttime} 
  
  </select>
  <select id="selectMatchMeeting"  resultMap="BaseResultMap">
	  select  
	      <include refid="Base_Column_List" />
	  from meeting
      where  status='1' and  meetingroomid=#{meetingroomid} 
       and #{signtime}>=  starttime  and  #{signtime}<![CDATA[<]]> endtime  
  
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from meeting
    where meetingid = #{meetingid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.broadvideo.pixsignage.domain.Meeting" >
    <selectKey resultType="java.lang.Integer" keyProperty="meetingid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into meeting (uuid, meetingroomid, subject, 
      description, starttime, endtime, 
      duration, amount, bookstaffid, 
      bookbranchid, qrcode, orgid, 
      createtime, createstaffid, updatetime, 
      updatestaffid, auditstatus, status
      )
    values (#{uuid,jdbcType=VARCHAR}, #{meetingroomid,jdbcType=INTEGER}, #{subject,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{starttime,jdbcType=TIMESTAMP}, #{endtime,jdbcType=TIMESTAMP}, 
      #{duration,jdbcType=INTEGER}, #{amount,jdbcType=INTEGER}, #{bookstaffid,jdbcType=INTEGER}, 
      #{bookbranchid,jdbcType=INTEGER}, #{qrcode,jdbcType=VARCHAR}, #{orgid,jdbcType=INTEGER}, 
      #{createtime,jdbcType=TIMESTAMP}, #{createstaffid,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{updatestaffid,jdbcType=INTEGER}, #{auditstatus,jdbcType=CHAR}, #{status,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.broadvideo.pixsignage.domain.Meeting" >
    <selectKey resultType="java.lang.Integer" keyProperty="meetingid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into meeting
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        uuid,
      </if>
      <if test="meetingroomid != null" >
        meetingroomid,
      </if>
      <if test="subject != null" >
        subject,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="starttime != null" >
        starttime,
      </if>
      <if test="endtime != null" >
        endtime,
      </if>
      <if test="duration != null" >
        duration,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="bookstaffid != null" >
        bookstaffid,
      </if>
      <if test="bookbranchid != null" >
        bookbranchid,
      </if>
      <if test="qrcode != null" >
        qrcode,
      </if>
      <if test="orgid != null" >
        orgid,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="createstaffid != null" >
        createstaffid,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="updatestaffid != null" >
        updatestaffid,
      </if>
      <if test="auditstatus != null" >
        auditstatus,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="meetingroomid != null" >
        #{meetingroomid,jdbcType=INTEGER},
      </if>
      <if test="subject != null" >
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="duration != null" >
        #{duration,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="bookstaffid != null" >
        #{bookstaffid,jdbcType=INTEGER},
      </if>
      <if test="bookbranchid != null" >
        #{bookbranchid,jdbcType=INTEGER},
      </if>
      <if test="qrcode != null" >
        #{qrcode,jdbcType=VARCHAR},
      </if>
      <if test="orgid != null" >
        #{orgid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createstaffid != null" >
        #{createstaffid,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatestaffid != null" >
        #{updatestaffid,jdbcType=INTEGER},
      </if>
      <if test="auditstatus != null" >
        #{auditstatus,jdbcType=CHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.broadvideo.pixsignage.domain.Meeting" >
    update meeting
    <set >
      <if test="uuid != null" >
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="meetingroomid != null" >
        meetingroomid = #{meetingroomid,jdbcType=INTEGER},
      </if>
      <if test="subject != null" >
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        starttime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        endtime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="duration != null" >
        duration = #{duration,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="bookstaffid != null" >
        bookstaffid = #{bookstaffid,jdbcType=INTEGER},
      </if>
      <if test="bookbranchid != null" >
        bookbranchid = #{bookbranchid,jdbcType=INTEGER},
      </if>
      <if test="qrcode != null" >
        qrcode = #{qrcode,jdbcType=VARCHAR},
      </if>
      <if test="orgid != null" >
        orgid = #{orgid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createstaffid != null" >
        createstaffid = #{createstaffid,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatestaffid != null" >
        updatestaffid = #{updatestaffid,jdbcType=INTEGER},
      </if>
      <if test="auditstatus != null" >
        auditstatus = #{auditstatus,jdbcType=CHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
    </set>
    where meetingid = #{meetingid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.broadvideo.pixsignage.domain.Meeting" >
    update meeting
    set uuid = #{uuid,jdbcType=VARCHAR},
      meetingroomid = #{meetingroomid,jdbcType=INTEGER},
      subject = #{subject,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      starttime = #{starttime,jdbcType=TIMESTAMP},
      endtime = #{endtime,jdbcType=TIMESTAMP},
      duration = #{duration,jdbcType=INTEGER},
      amount = #{amount,jdbcType=INTEGER},
      bookstaffid = #{bookstaffid,jdbcType=INTEGER},
      bookbranchid = #{bookbranchid,jdbcType=INTEGER},
      qrcode = #{qrcode,jdbcType=VARCHAR},
      orgid = #{orgid,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      createstaffid = #{createstaffid,jdbcType=INTEGER},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      updatestaffid = #{updatestaffid,jdbcType=INTEGER},
      auditstatus = #{auditstatus,jdbcType=CHAR},
      status = #{status,jdbcType=CHAR}
    where meetingid = #{meetingid,jdbcType=INTEGER}
  </update>
  
    <update id="updateMeeting" parameterType="com.broadvideo.pixsignage.domain.Meeting" >
       update meeting
    <set >

      <if test="subject != null" >
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        starttime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        endtime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatestaffid != null" >
        updatestaffid = #{updatestaffid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="auditstatus != null" >
        auditstatus = #{auditstatus,jdbcType=CHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where meetingid = #{meetingid,jdbcType=INTEGER}  and orgid=#{orgid}
  </update>
  

  
</mapper>