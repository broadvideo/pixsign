<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.broadvideo.pixsignage.persistence.AttendanceeventMapper" >
  <resultMap id="BaseResultMap" type="com.broadvideo.pixsignage.domain.Attendanceevent" >
    <id column="attendanceeventid" property="attendanceeventid" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="CHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="attendanceschemeid" property="attendanceschemeid" jdbcType="INTEGER" />
    <result column="classroomid" property="classroomid" jdbcType="INTEGER" />
    <result column="orgid" property="orgid" jdbcType="INTEGER" />
    <result column="objectid" property="objectid" jdbcType="INTEGER" />
    <result column="objecttype" property="objecttype" jdbcType="CHAR" />
    <result column="ondate" property="ondate" jdbcType="VARCHAR" />
    <result column="starttime" property="starttime" jdbcType="TIMESTAMP" />
    <result column="endtime" property="endtime" jdbcType="TIMESTAMP" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    attendanceeventid, type, name, attendanceschemeid, classroomid, orgid, objectid, 
    objecttype, ondate, starttime, endtime, createtime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from attendanceevent
    where attendanceeventid = #{attendanceeventid,jdbcType=INTEGER}  and orgid=#{orgid}
  </select>
  <select id="selectAttendanceeventsBy"  resultMap="BaseResultMap">
     select 
    <include refid="Base_Column_List" />
    from attendanceevent
    where  orgid=#{orgid} and  attendanceschemeid=#{attendanceschemeid}
          and (type='0' or  classroomid=#{classroomid})
          and ondate=#{date}
        
  </select>
  
  <select id="countRecordsBy"  resultType="Integer">
   select count(1)
   from  attendanceevent
   where attendanceschemeid=#{attendanceschemeid} and ondate=#{date}
  
  </select>
  <select id="selectClassroomeventdtls" resultType="map">
  
	  SELECT
	  ev.attendanceeventid,
	  ev.name as eventname,
	  ev.starttime,
	  ev.endtime,
	  ae.studentid,
	  st.name as studentname,
	  st.studentno,
	  st.avatar,
	  ae.eventtime
	FROM attendanceevent ev
	  LEFT JOIN attendance ae
	    ON ev.attendanceeventid = ae.attendanceeventid LEFT JOIN student st ON ae.studentid=st.studentid
	WHERE  ae.orgid =#{orgid} AND ae.classroomid = 52 AND ae.attendanceeventid=#{attendanceeventid};
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from attendanceevent
    where attendanceeventid = #{attendanceeventid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteAttendanceevents" >
    delete from attendanceevent
    where  attendanceschemeid=#{attendanceschemeid}  and ondate=#{date}
         
  </delete>
  <insert id="insert" parameterType="com.broadvideo.pixsignage.domain.Attendanceevent" >
    <selectKey resultType="java.lang.Integer" keyProperty="attendanceeventid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into attendanceevent (type, name, attendanceschemeid, 
      classroomid, orgid, objectid, 
      objecttype, ondate, starttime, 
      endtime, createtime)
    values (#{type,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, #{attendanceschemeid,jdbcType=INTEGER}, 
      #{classroomid,jdbcType=INTEGER}, #{orgid,jdbcType=INTEGER}, #{objectid,jdbcType=INTEGER}, 
      #{objecttype,jdbcType=CHAR}, #{ondate,jdbcType=VARCHAR}, #{starttime,jdbcType=TIMESTAMP}, 
      #{endtime,jdbcType=TIMESTAMP}, #{createtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.broadvideo.pixsignage.domain.Attendanceevent" >
    <selectKey resultType="java.lang.Integer" keyProperty="attendanceeventid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into attendanceevent
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="type != null" >
        type,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="attendanceschemeid != null" >
        attendanceschemeid,
      </if>
      <if test="classroomid != null" >
        classroomid,
      </if>
      <if test="orgid != null" >
        orgid,
      </if>
      <if test="objectid != null" >
        objectid,
      </if>
      <if test="objecttype != null" >
        objecttype,
      </if>
      <if test="ondate != null" >
        ondate,
      </if>
      <if test="starttime != null" >
        starttime,
      </if>
      <if test="endtime != null" >
        endtime,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="type != null" >
        #{type,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="attendanceschemeid != null" >
        #{attendanceschemeid,jdbcType=INTEGER},
      </if>
      <if test="classroomid != null" >
        #{classroomid,jdbcType=INTEGER},
      </if>
      <if test="orgid != null" >
        #{orgid,jdbcType=INTEGER},
      </if>
      <if test="objectid != null" >
        #{objectid,jdbcType=INTEGER},
      </if>
      <if test="objecttype != null" >
        #{objecttype,jdbcType=CHAR},
      </if>
      <if test="ondate != null" >
        #{ondate,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.broadvideo.pixsignage.domain.Attendanceevent" >
    update attendanceevent
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="attendanceschemeid != null" >
        attendanceschemeid = #{attendanceschemeid,jdbcType=INTEGER},
      </if>
      <if test="classroomid != null" >
        classroomid = #{classroomid,jdbcType=INTEGER},
      </if>
      <if test="orgid != null" >
        orgid = #{orgid,jdbcType=INTEGER},
      </if>
      <if test="objectid != null" >
        objectid = #{objectid,jdbcType=INTEGER},
      </if>
      <if test="objecttype != null" >
        objecttype = #{objecttype,jdbcType=CHAR},
      </if>
      <if test="ondate != null" >
        ondate = #{ondate,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        starttime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        endtime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where attendanceeventid = #{attendanceeventid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.broadvideo.pixsignage.domain.Attendanceevent" >
    update attendanceevent
    set type = #{type,jdbcType=CHAR},
      name = #{name,jdbcType=VARCHAR},
      attendanceschemeid = #{attendanceschemeid,jdbcType=INTEGER},
      classroomid = #{classroomid,jdbcType=INTEGER},
      orgid = #{orgid,jdbcType=INTEGER},
      objectid = #{objectid,jdbcType=INTEGER},
      objecttype = #{objecttype,jdbcType=CHAR},
      ondate = #{ondate,jdbcType=VARCHAR},
      starttime = #{starttime,jdbcType=TIMESTAMP},
      endtime = #{endtime,jdbcType=TIMESTAMP},
      createtime = #{createtime,jdbcType=TIMESTAMP}
    where attendanceeventid = #{attendanceeventid,jdbcType=INTEGER}
  </update>
</mapper>