<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.broadvideo.pixsignage.persistence.AttendancelogMapper" >
  <resultMap id="BaseResultMap" type="com.broadvideo.pixsignage.domain.Attendancelog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="studentid" property="studentid" jdbcType="INTEGER" />
    <result column="orgid" property="orgid" jdbcType="INTEGER" />
    <result column="schoolclassid" property="schoolclassid" jdbcType="INTEGER" />
    <result column="classroomid" property="classroomid" jdbcType="INTEGER" />
    <result column="coursescheduleid" property="coursescheduleid" jdbcType="INTEGER" />
    <result column="eventtime" property="eventtime" jdbcType="TIMESTAMP" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, studentid, orgid, schoolclassid, classroomid, coursescheduleid, eventtime, createtime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from attendancelog
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectCount" resultType="Integer">
   	  select count(1)
	  from attendancelog al
	  left join student st
	    on al.studentid = st.studentid
	  left join schoolclass sc on al.schoolclassid=sc.schoolclassid
	  left join classroom cr
	    on al.classroomid = cr.id
	  left join courseschedule cs
	    on al.coursescheduleid = cs.id
    where al.orgid = #{orgid}
    <if test="classroomid != null">
      and al.classroomid = #{classroomid}
    </if>
    <if test="search != null">
      and (st.name like #{search} or cr.name like #{search} or cs.coursename like #{search} or sc.name like #{search})
    </if> 
  </select>
  <select id="selectList" resultType="map">
  
	  select al.id,al.eventtime,al.createtime,
	        al.studentid,st.studentno,st.name as studentname,IFNULL(sc.name,'') as schoolclassname,
	        cr.name as classroomname,IFNULL(cs.coursename,'') as coursename
	  from attendancelog al
	  left join student st
	    on al.studentid = st.studentid
	  left join schoolclass sc on al.schoolclassid=sc.schoolclassid
	  left join classroom cr
	    on al.classroomid = cr.id
	  left join courseschedule cs
	    on al.coursescheduleid = cs.id
    where al.orgid = #{orgid}
    <if test="classroomid != null">
      and al.classroomid = #{classroomid}
    </if>
    <if test="search != null">
      and (st.name like #{search} or cr.name like #{search} or cs.coursename like #{search})
    </if>
    order by al.id desc 
    <if test="start != null and length != null">
      limit ${start}, ${length}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from attendancelog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.broadvideo.pixsignage.domain.Attendancelog" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into attendancelog (studentid, orgid, schoolclassid, 
      classroomid, coursescheduleid, eventtime, 
      createtime)
    values (#{studentid,jdbcType=INTEGER}, #{orgid,jdbcType=INTEGER}, #{schoolclassid,jdbcType=INTEGER}, 
      #{classroomid,jdbcType=INTEGER}, #{coursescheduleid,jdbcType=INTEGER}, #{eventtime,jdbcType=TIMESTAMP}, 
      #{createtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.broadvideo.pixsignage.domain.Attendancelog" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into attendancelog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studentid != null" >
        studentid,
      </if>
      <if test="orgid != null" >
        orgid,
      </if>
      <if test="schoolclassid != null" >
        schoolclassid,
      </if>
      <if test="classroomid != null" >
        classroomid,
      </if>
      <if test="coursescheduleid != null" >
        coursescheduleid,
      </if>
      <if test="eventtime != null" >
        eventtime,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studentid != null" >
        #{studentid,jdbcType=INTEGER},
      </if>
      <if test="orgid != null" >
        #{orgid,jdbcType=INTEGER},
      </if>
      <if test="schoolclassid != null" >
        #{schoolclassid,jdbcType=INTEGER},
      </if>
      <if test="classroomid != null" >
        #{classroomid,jdbcType=INTEGER},
      </if>
      <if test="coursescheduleid != null" >
        #{coursescheduleid,jdbcType=INTEGER},
      </if>
      <if test="eventtime != null" >
        #{eventtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.broadvideo.pixsignage.domain.Attendancelog" >
    update attendancelog
    <set >
      <if test="studentid != null" >
        studentid = #{studentid,jdbcType=INTEGER},
      </if>
      <if test="orgid != null" >
        orgid = #{orgid,jdbcType=INTEGER},
      </if>
      <if test="schoolclassid != null" >
        schoolclassid = #{schoolclassid,jdbcType=INTEGER},
      </if>
      <if test="classroomid != null" >
        classroomid = #{classroomid,jdbcType=INTEGER},
      </if>
      <if test="coursescheduleid != null" >
        coursescheduleid = #{coursescheduleid,jdbcType=INTEGER},
      </if>
      <if test="eventtime != null" >
        eventtime = #{eventtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.broadvideo.pixsignage.domain.Attendancelog" >
    update attendancelog
    set studentid = #{studentid,jdbcType=INTEGER},
      orgid = #{orgid,jdbcType=INTEGER},
      schoolclassid = #{schoolclassid,jdbcType=INTEGER},
      classroomid = #{classroomid,jdbcType=INTEGER},
      coursescheduleid = #{coursescheduleid,jdbcType=INTEGER},
      eventtime = #{eventtime,jdbcType=TIMESTAMP},
      createtime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>